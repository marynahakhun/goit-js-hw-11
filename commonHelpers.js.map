{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const KEY = '42545240-8b0483885ebe28877133c0801';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport function pixabayApi(query) {\n    const LINK = `${BASE_URL}?key=${KEY}&q=${query}`;\n    return fetch(LINK)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('IMG error');\n            }\n            return response.json();\n        });\n}\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nexport function renderImages(data) {\n    return data.hits.map(({webformatURL, tags, largeImageURL, likes, views, comments, downloads})=>{\n        return ` <li>\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n        <img class=\"gallery-image\" src=\"${webformatURL}\" \n        alt=\"${tags}\"\n        data-source=\"${largeImageURL}\">\n        <div class=\"image-info\">\n                            <ul class=\"image-info-list\">\n                                <li class=\"image-item\">\n                                    <h2 class=\"image-text\">Likes</h2>\n                                    <p class=\"image-quantity\">${likes}</p>\n                                </li>\n                                <li class=\"image-item\">\n                                    <h2 class=\"image-text\">Views</h2>\n                                    <p class=\"image-quantity\">${views}</p>\n                                </li>\n                                <li class=\"image-item\">\n                                    <h2 class=\"image-text\">Comments</h2>\n                                    <p class=\"image-quantity\">${comments}</p>\n                                </li>\n                                <li class=\"image-item\">\n                                    <h2 class=\"image-text\">Downloads</h2>\n                                    <p class=\"image-quantity\">${downloads}</p>\n                                </li>\n                            </ul>\n                        </div>\n      </li>`;\n    }).join(\"\");\n}\n\nexport function initializeLightbox() {\n    return new SimpleLightbox('.gallery-link', {\n        captionsData: 'alt',\n        captionDelay: 250,\n    });\n}\n","import { pixabayApi } from './js/pixabay-api.js';\nimport { renderImages, initializeLightbox } from './js/render-functions.js';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector('.form');\nconst gallery = document.querySelector(\".gallery\");\nconst loader = document.querySelector(\".loader\");\nlet lightbox;\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n    event.preventDefault();\n    gallery.innerHTML = \"\";\n    const value = form.elements['search'].value;\n    loader.style.display = \"block\"; \n\n    pixabayApi(value)\n        .then(data => {\n            if (data.hits.length === 0) {\n                    iziToast.error({\n                        message: 'Sorry, there are no images matching your search query. Please try again!',\n                        messageColor: '#FFFFFF',\n                        backgroundColor: '#B51B1B',\n                        position: 'center',\n                    });\n                    loader.style.display = \"none\";\n                    form.reset();\n               \n                \n                 \n            } else if(!value.trim()){\n                iziToast.error({\n                    message: 'Заповніть це поле!',\n                    messageColor: '#FFFFFF',\n                    backgroundColor: '#B51B1B',\n                    position: 'topRight',\n                });\n                loader.style.display = \"none\";\n            }\n            else {\n                    const imagesHTML = renderImages(data);\n                gallery.innerHTML= imagesHTML;\n                loader.style.display = \"none\"; \n                lightbox = initializeLightbox();\n                lightbox.refresh();\n                form.reset(); \n                \n               \n            }\n        })\n        .catch(error => {\n            console.error('Fetch error:', error);\n        })\n}\n"],"names":["KEY","BASE_URL","pixabayApi","query","LINK","response","renderImages","data","webformatURL","tags","largeImageURL","likes","views","comments","downloads","initializeLightbox","SimpleLightbox","form","gallery","loader","lightbox","onSubmit","event","value","iziToast","imagesHTML","error"],"mappings":"6vBAAA,MAAMA,EAAM,qCACNC,EAAW,2BAEV,SAASC,EAAWC,EAAO,CAC9B,MAAMC,EAAO,GAAGH,CAAQ,QAAQD,CAAG,MAAMG,CAAK,GAC9C,OAAO,MAAMC,CAAI,EACZ,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,WAAW,EAE/B,OAAOA,EAAS,MAC5B,CAAS,CACT,CCTO,SAASC,EAAaC,EAAM,CAC/B,OAAOA,EAAK,KAAK,IAAI,CAAC,CAAC,aAAAC,EAAc,KAAAC,EAAM,cAAAC,EAAe,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAChF;AAAA,wCACyBJ,CAAa;AAAA,0CACXF,CAAY;AAAA,eACvCC,CAAI;AAAA,uBACIC,CAAa;AAAA;AAAA;AAAA;AAAA;AAAA,gEAK4BC,CAAK;AAAA;AAAA;AAAA;AAAA,gEAILC,CAAK;AAAA;AAAA;AAAA;AAAA,gEAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,gEAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,YAKpE,EAAE,KAAK,EAAE,CACd,CAEO,SAASC,GAAqB,CACjC,OAAO,IAAIC,EAAe,gBAAiB,CACvC,aAAc,MACd,aAAc,GACtB,CAAK,CACL,CClCA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAC/C,IAAIC,EAEJH,EAAK,iBAAiB,SAAUI,CAAQ,EAExC,SAASA,EAASC,EAAO,CACrBA,EAAM,eAAc,EACpBJ,EAAQ,UAAY,GACpB,MAAMK,EAAQN,EAAK,SAAS,OAAU,MACtCE,EAAO,MAAM,QAAU,QAEvBjB,EAAWqB,CAAK,EACX,KAAKhB,GAAQ,CACV,GAAIA,EAAK,KAAK,SAAW,EACjBiB,EAAS,MAAM,CACX,QAAS,2EACT,aAAc,UACd,gBAAiB,UACjB,SAAU,QAClC,CAAqB,EACDL,EAAO,MAAM,QAAU,OACvBF,EAAK,MAAK,UAIR,CAACM,EAAM,OACbC,EAAS,MAAM,CACX,QAAS,qBACT,aAAc,UACd,gBAAiB,UACjB,SAAU,UAC9B,CAAiB,EACDL,EAAO,MAAM,QAAU,WAEtB,CACG,MAAMM,EAAanB,EAAaC,CAAI,EACxCW,EAAQ,UAAWO,EACnBN,EAAO,MAAM,QAAU,OACvBC,EAAWL,EAAkB,EAC7BK,EAAS,QAAO,EAChBH,EAAK,MAAK,CAGb,CACb,CAAS,EACA,MAAMS,GAAS,CACZ,QAAQ,MAAM,eAAgBA,CAAK,CAC/C,CAAS,CACT"}